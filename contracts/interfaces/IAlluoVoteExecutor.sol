// SPDX-License-Identifier: UNLICENSED
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.6.6. SEE SOURCE BELOW. !!
pragma solidity ^0.8.17;

interface IAlluoVoteExecutor {
    event AdminChanged(address previousAdmin, address newAdmin);
    event BeaconUpgraded(address indexed beacon);
    event Initialized(uint8 version);
    event MessageReceived(bytes32 indexed hashed);
    event RoleAdminChanged(
        bytes32 indexed role,
        bytes32 indexed previousAdminRole,
        bytes32 indexed newAdminRole
    );
    event RoleGranted(
        bytes32 indexed role,
        address indexed account,
        address indexed sender
    );
    event RoleRevoked(
        bytes32 indexed role,
        address indexed account,
        address indexed sender
    );
    event Upgraded(address indexed implementation);

    function ALLUO() external view returns (address);

    function DEFAULT_ADMIN_ROLE() external view returns (bytes32);

    function FUND_MANAGER() external view returns (address);

    function GELATO_ROLE() external view returns (bytes32);

    function UPGRADER_ROLE() external view returns (bytes32);

    function WETH() external view returns (address);

    function __AlluoUpgradeableBase_init() external;

    function anyCallV7() external view returns (address);

    function anyCallV7Executor() external view returns (address);

    function anyExecute(
        bytes memory data
    ) external returns (bool success, bytes memory result);

    function approveSubmittedData(
        uint256 _dataId,
        bytes[] memory _signs
    ) external;

    function assetIdToDepositPercentages(
        uint256,
        uint256
    ) external view returns (uint256 directionId, uint256 amount);

    function changeUpgradeStatus(bool _status) external;

    function crossChainInformation()
        external
        view
        returns (
            address nextExecutor,
            address previousExecutor,
            address finalExecutor,
            uint256 finalExecutorChainId,
            uint256 nextExecutorChainId,
            uint256 previousExecutorChainId,
            uint256 numberOfExecutors,
            uint256 currentExecutorInternalId
        );

    function cvxDistributor() external view returns (address);

    function desiredPercentagesByChain(
        uint256,
        uint256
    ) external view returns (uint256);

    function exchangeAddress() external view returns (address);

    function executionHistory(uint256) external view returns (bytes memory);

    function getAssetIdToDepositPercentages(
        uint256 _assetId
    ) external view returns (Deposit[] memory);

    function getRoleAdmin(bytes32 role) external view returns (bytes32);

    function gnosis() external view returns (address);

    function grantRole(bytes32 role, address account) external;

    function hasRole(
        bytes32 role,
        address account
    ) external view returns (bool);

    function hashExecutionTime(bytes32) external view returns (uint256);

    function ibAlluoSymbolToAddress(
        string memory
    ) external view returns (address);

    function initialize(address _multiSigWallet) external;

    function isMaster() external view returns (bool);

    function liquidityHandler() external view returns (address);

    function locker() external view returns (address);

    function markAllChainPositions() external;

    function minSigns() external view returns (uint256);

    function multicall(
        address[] memory destinations,
        bytes[] memory calldatas
    ) external;

    function priceFeed() external view returns (address);

    function proxiableUUID() external view returns (bytes32);

    function renounceRole(bytes32 role, address account) external;

    function revokeRole(bytes32 role, address account) external;

    function strategyHandler() external view returns (address);

    function submitData(bytes memory data) external;

    function submittedData(
        uint256
    ) external view returns (bytes memory data, uint256 time);

    function supportsInterface(bytes4 interfaceId) external view returns (bool);

    function timeLock() external view returns (uint256);

    function triggerBridging() external;

    function universalExecutorBalances(
        uint256,
        uint256
    ) external view returns (uint256);

    function universalTVL(uint256) external view returns (uint256);

    function universalTVLUpdated() external view returns (uint256);

    function updateAllIbAlluoAddresses() external;

    function upgradeStatus() external view returns (bool);

    function upgradeTo(address newImplementation) external;

    function upgradeToAndCall(
        address newImplementation,
        bytes memory data
    ) external payable;

    function voteExecutorUtils() external view returns (address);

    struct Message {
        uint256 commandIndex;
        bytes commandData;
    }

    struct Deposit {
        uint256 directionId;
        uint256 amount;
    }

    struct SubmittedData {
        bytes data;
        uint256 time;
        bytes[] signs;
    }
}

// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:
/*
[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hashed","type":"bytes32"}],"name":"MessageReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"ALLUO","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FUND_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GELATO_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWrappedEther","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"anyCallV7","outputs":[{"internalType":"contract IAnyCallV7","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"anyCallV7Executor","outputs":[{"internalType":"contract IAnyCallV7Executor","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"anyExecute","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dataId","type":"uint256"},{"internalType":"bytes[]","name":"_signs","type":"bytes[]"}],"name":"approveSubmittedData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetIdToDepositPercentages","outputs":[{"internalType":"uint256","name":"directionId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"}],"name":"changeUpgradeStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"confirmDataIntegrity","outputs":[{"components":[{"internalType":"uint256","name":"commandIndex","type":"uint256"},{"internalType":"bytes","name":"commandData","type":"bytes"}],"internalType":"struct AlluoVoteExecutor.Message[]","name":"","type":"tuple[]"},{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cvxDistributor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"_commandIndexes","type":"uint256[]"},{"internalType":"bytes[]","name":"_messages","type":"bytes[]"}],"name":"encodeAllMessages","outputs":[{"internalType":"bytes32","name":"messagesHash","type":"bytes32"},{"components":[{"internalType":"uint256","name":"commandIndex","type":"uint256"},{"internalType":"bytes","name":"commandData","type":"bytes"}],"internalType":"struct AlluoVoteExecutor.Message[]","name":"messages","type":"tuple[]"},{"internalType":"bytes","name":"inputData","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ibAlluoName","type":"string"},{"internalType":"uint256","name":"_newAnnualInterest","type":"uint256"},{"internalType":"uint256","name":"_newInterestPerSecond","type":"uint256"}],"name":"encodeApyCommand","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newMintAmount","type":"uint256"},{"internalType":"uint256","name":"_period","type":"uint256"}],"name":"encodeMintCommand","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"int256","name":"_delta","type":"int256"}],"name":"encodeTreasuryAllocationChangeCommand","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"exchangeAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"executionHistory","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_assetId","type":"uint256"}],"name":"getAssetIdToDepositPercentages","outputs":[{"components":[{"internalType":"uint256","name":"directionId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AlluoVoteExecutor.Deposit[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dataId","type":"uint256"}],"name":"getSubmittedData","outputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gnosis","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"hashExecutionTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"ibAlluoSymbolToAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_multiSigWallet","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidityHandler","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"locker","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"markAllChainPositions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"minSigns","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"destinations","type":"address[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"}],"name":"multicall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"strategyHandler","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"submitData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"submittedData","outputs":[{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"time","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timeLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"updateAllIbAlluoAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"upgradeStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}]
*/
