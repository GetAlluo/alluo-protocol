{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8D64f77f2ce715Af48de32e19C2fBe5FD52082B8",
      "txHash": "0xa5981741a997e11069d30a188e5cb0fe73a1d1822d9afae3ba0a8148c18b1e94",
      "kind": "uups"
    },
    {
      "address": "0x6cDd728571a2a67617495AeBfD4942Afaa29D9a3",
      "txHash": "0x0bfd9f8d3c5ee40693dca5fc6071a31f50d34582000ab89354d940ba39b7d8d4",
      "kind": "uups"
    },
    {
      "address": "0x22E088791C51DEC062cA14573Da75a82aff460A4",
      "txHash": "0x00cc3d97433af30a0f8834ca55b4f1f60388645d17d6b86b037dfb7448e9ea68",
      "kind": "uups"
    },
    {
      "address": "0xF9F9381Fbc5225180015b1f0eab6c33DbF0b37Ab",
      "txHash": "0xe5fe51110883597f69b1f2e23db94a56be6da964e7d72cf9768403df7e8eb802",
      "kind": "uups"
    },
    {
      "address": "0x20bb70c55387Bc0F9073D27d09Ab0ce9D26c4Eaa",
      "txHash": "0x6d5e3e3872d574c152401854a8c17cfc1fb247c0277bb461290e9a52af64d8a7",
      "kind": "uups"
    },
    {
      "address": "0xb6c21F6e83b8E38274D23F2e98dF78a058353D87",
      "txHash": "0xa2d08f3fe19643907b5376bff5e264f16152344b1ef0acb4cba7880482b76ff6",
      "kind": "uups"
    },
    {
      "address": "0xEDDbf200Fb3244Bc289e8d437266E556D55D17b7",
      "txHash": "0x6bcf721b7c90fc68e2f901cf69b0e25d8711640fc898c6b89de14b729958b28b",
      "kind": "uups"
    },
    {
      "address": "0x71402a46d78a10c8eE7E7CdEf2AffeC8d1E312A1",
      "kind": "uups"
    },
    {
      "address": "0x13D2Cc840FC599F1c3B260e6F7CcA6D141db8da2",
      "kind": "uups"
    },
    {
      "address": "0xEC1C242735295aeF653B20A81044D2d55e9cBf0C",
      "txHash": "0xd21f14f6e8fd97a0f015059ebb2526c86235990d5befa6e4aa757fb66a42e7ce",
      "kind": "uups"
    },
    {
      "address": "0xdC495DFf72d694d32d8e926668594D360c91e169",
      "txHash": "0x353eb8af97c9b4ef86173020ab5cccb535a937c3d609099f98ab46a1e4da55b7",
      "kind": "uups"
    },
    {
      "address": "0x3F98aaB47De404447B1cc12aA95f9f91a62A9A2F",
      "txHash": "0xa92a73a9780b5c4a4ffb14cc24841d38257c38990e6269d247a98be8377d1308",
      "kind": "uups"
    },
    {
      "address": "0xB579C5ba3Bc8EA2F5DD5622f1a5EaC6282516fB1",
      "txHash": "0xa71c98e7e4ec406e2078e3333676ea5f128a0423ac9ec26090fa697f1a4958a6",
      "kind": "uups"
    },
    {
      "address": "0x9A4cBEe2f0FF57749caf66570692dAdB3462bAc9",
      "txHash": "0x5e09be4ff4229c3919d437a632e5de3f5a98a89c41b91587fd7801b829f70750",
      "kind": "uups"
    },
    {
      "address": "0x7E93BaA89c18a473e3de6fd7BD85715e1415Fc5C",
      "txHash": "0xbb5a4cf5c339ff08842ce8d0ea68bb09cbacbdeff9fbc74eef818f8a9b60100d",
      "kind": "uups"
    },
    {
      "address": "0xae583E5E35c2bF14dE026941aA4f2593e646be60",
      "txHash": "0xde7be0a9272e4e5030bfd2c349d2c1bacedcee58a16c73ca334e3bb5ce0415bd",
      "kind": "uups"
    }
  ],
  "impls": {
    "9550ccb3952f58f9246fedcbbd6cb7c3860c0624a954ea815d7a4c5401cc62f3": {
      "address": "0x9C1d263d41b3ad2A4e2DCb8D987ed32da0015f41",
      "txHash": "0x677ea19a388b1461ec767c0ee16d5b35ec44ce95187ad68b1976f6cfd035f72c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "growingRatio",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "IbAlluo",
            "src": "contracts/Farming/IbAlluo.sol:32"
          },
          {
            "label": "lastInterestCompound",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "IbAlluo",
            "src": "contracts/Farming/IbAlluo.sol:35"
          },
          {
            "label": "updateTimeLimit",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "IbAlluo",
            "src": "contracts/Farming/IbAlluo.sol:38"
          },
          {
            "label": "multiplier",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "IbAlluo",
            "src": "contracts/Farming/IbAlluo.sol:41"
          },
          {
            "label": "interestPerSecond",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "IbAlluo",
            "src": "contracts/Farming/IbAlluo.sol:44"
          },
          {
            "label": "annualInterest",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "IbAlluo",
            "src": "contracts/Farming/IbAlluo.sol:47"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "IbAlluo",
            "src": "contracts/Farming/IbAlluo.sol:50"
          },
          {
            "label": "liquidityBuffer",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "IbAlluo",
            "src": "contracts/Farming/IbAlluo.sol:53"
          },
          {
            "label": "upgradeStatus",
            "offset": 20,
            "slot": "358",
            "type": "t_bool",
            "contract": "IbAlluo",
            "src": "contracts/Farming/IbAlluo.sol:56"
          },
          {
            "label": "supportedTokens",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(AddressSet)2413_storage",
            "contract": "IbAlluo",
            "src": "contracts/Farming/IbAlluo.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2413_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2112_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2112_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "fced70ace1ad28c30b5dc4c6d317ab021e12799f068ef271ec47dde43624d405": {
      "address": "0x5F1F25507ae7a50f9651fa2D2F0F40bb5eCABEd4",
      "txHash": "0x3d59714fc3d6fe91958f0c1783211e53ffac805c3f99a43e8deefdec0f1f3a97",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "growingRatio",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:32"
          },
          {
            "label": "lastInterestCompound",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:35"
          },
          {
            "label": "updateTimeLimit",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:38"
          },
          {
            "label": "multiplier",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:41"
          },
          {
            "label": "interestPerSecond",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:44"
          },
          {
            "label": "annualInterest",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:47"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:50"
          },
          {
            "label": "liquidityBuffer",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:53"
          },
          {
            "label": "upgradeStatus",
            "offset": 20,
            "slot": "358",
            "type": "t_bool",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:56"
          },
          {
            "label": "supportedTokens",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(AddressSet)2354_storage",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2354_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2053_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2053_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "6d94f8fd4f6cdf57eead7ecc8029b53057053b27e3210d3d05f4f5dd0956c0af": {
      "address": "0x4f7917c053dB2ac459A7E931A96e552951cE7458",
      "txHash": "0xf3c58370e5a68c43926171f0d9294cbdc08b399bec577e117cb05fc8c8ffeff7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:28"
          },
          {
            "label": "alluoLp",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:31"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(FakeCurve)26145",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:34"
          },
          {
            "label": "inPoolAmount",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:37"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "305",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:40"
          },
          {
            "label": "slippage",
            "offset": 1,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:43"
          },
          {
            "label": "bufferPercentage",
            "offset": 5,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:46"
          },
          {
            "label": "totalWithdrawalAmount",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:49"
          },
          {
            "label": "withdrawals",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_struct(Withdrawal)28550_storage)",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:64"
          },
          {
            "label": "lastWithdrawalRequest",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:67"
          },
          {
            "label": "lastSatisfiedWithdrawal",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:69"
          },
          {
            "label": "DAI",
            "offset": 0,
            "slot": "310",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:71"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "311",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:72"
          },
          {
            "label": "USDT",
            "offset": 0,
            "slot": "312",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:73"
          },
          {
            "label": "keepersTrigger",
            "offset": 20,
            "slot": "312",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FakeCurve)26145": {
            "label": "contract FakeCurve",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1335": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Withdrawal)28550_storage)": {
            "label": "mapping(uint256 => struct LiquidityBufferVaultForMumbai.Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Withdrawal)28550_storage": {
            "label": "struct LiquidityBufferVaultForMumbai.Withdrawal",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "f7e9d56dc981c29c832949db3381ea3080114b0309bebfc4eaea7bbb818ef6ab": {
      "address": "0x769Be9cF8677670D3a0DEAdB77c52a1534Ed54cE",
      "txHash": "0x9b8cb0e8c83aa506ae67a498577402785c07d8aab9157bc6103b4921c026f045",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:38"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:40"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:42"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:44"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:396"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "growingRatio",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:32"
          },
          {
            "label": "lastInterestCompound",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:35"
          },
          {
            "label": "updateTimeLimit",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:38"
          },
          {
            "label": "multiplier",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:41"
          },
          {
            "label": "interestPerSecond",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:44"
          },
          {
            "label": "annualInterest",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:47"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:50"
          },
          {
            "label": "liquidityBuffer",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:53"
          },
          {
            "label": "upgradeStatus",
            "offset": 20,
            "slot": "358",
            "type": "t_bool",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:56"
          },
          {
            "label": "supportedTokens",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(AddressSet)2413_storage",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2413_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2112_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2112_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a1afa0c254121d0c67b31f3784e093dbe2c00f4a1559177a009ea68304571f80": {
      "address": "0xCb0682f57988D80D640c3Ad208DCB9B0FA285C66",
      "txHash": "0x099d25eb745a02f951c1a3e3a790f80806caba7b5c081d48c36906e0d5be0b55",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:38"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:40"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:42"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:44"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts/Farming/AlluoERC20Upgradable.sol:396"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "growingRatio",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:32"
          },
          {
            "label": "lastInterestCompound",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:35"
          },
          {
            "label": "updateTimeLimit",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:38"
          },
          {
            "label": "multiplier",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:41"
          },
          {
            "label": "interestPerSecond",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:44"
          },
          {
            "label": "annualInterest",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:47"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:50"
          },
          {
            "label": "liquidityBuffer",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:53"
          },
          {
            "label": "upgradeStatus",
            "offset": 20,
            "slot": "358",
            "type": "t_bool",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:56"
          },
          {
            "label": "supportedTokens",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(AddressSet)2413_storage",
            "contract": "IbAlluoForMumbai",
            "src": "contracts/mock/testnet/IbAlluoForMumbai.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2413_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2112_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2112_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1c843afead21341110e8842891eeb20f1e87db65348dcf8eda19fee4ce9d5931": {
      "address": "0x5e4dAba56d15708EA076CA2fe83ADCF3472AE093",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:38"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:40"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:42"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:44"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:396"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "growingRatio",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai.sol:32"
          },
          {
            "label": "lastInterestCompound",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai.sol:35"
          },
          {
            "label": "updateTimeLimit",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai.sol:38"
          },
          {
            "label": "multiplier",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai.sol:41"
          },
          {
            "label": "interestPerSecond",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai.sol:44"
          },
          {
            "label": "annualInterest",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai.sol:47"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "IbAlluoForMumbai",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai.sol:50"
          },
          {
            "label": "liquidityBuffer",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "IbAlluoForMumbai",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai.sol:53"
          },
          {
            "label": "upgradeStatus",
            "offset": 20,
            "slot": "358",
            "type": "t_bool",
            "contract": "IbAlluoForMumbai",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai.sol:56"
          },
          {
            "label": "supportedTokens",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(AddressSet)2500_storage",
            "contract": "IbAlluoForMumbai",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2500_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2199_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2199_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "5445549712afad4d105ad52ce63ed00a1998edf43e1b686bb59e0ac579f66f87": {
      "address": "0x2f0FBFB9a0A98D92b62dC35859d1d8C6AdDd57eB",
      "txHash": "0x52cc00a1c391577a4844d4034ab7a2a0d06677b7e3498dac48b3564ba88d8e14",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:38"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:40"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:42"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:44"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:396"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "growingRatio",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V2",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:32"
          },
          {
            "label": "lastInterestCompound",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V2",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:35"
          },
          {
            "label": "updateTimeLimit",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V2",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:38"
          },
          {
            "label": "multiplier",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V2",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:41"
          },
          {
            "label": "interestPerSecond",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V2",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:44"
          },
          {
            "label": "annualInterest",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V2",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:47"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "IbAlluoForMumbai_V2",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:50"
          },
          {
            "label": "liquidityBuffer",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "IbAlluoForMumbai_V2",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:53"
          },
          {
            "label": "upgradeStatus",
            "offset": 20,
            "slot": "358",
            "type": "t_bool",
            "contract": "IbAlluoForMumbai_V2",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:56"
          },
          {
            "label": "supportedTokens",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(AddressSet)2500_storage",
            "contract": "IbAlluoForMumbai_V2",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:59"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "IbAlluoForMumbai_V2",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2500_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2199_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2199_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "8cdcac3ddd6633967fffe8544a412811503a3dede795e5c16a75a4b5413b61b8": {
      "address": "0xE5D9E515C1184883658acE64ac0fBbC7F83f7782",
      "txHash": "0xa2492d99c67c702bd1b6018d010d6f8d9f70c6754a9d5f64023021a4be7c4109",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:38"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:40"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:42"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:44"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:396"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "growingRatio",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:32"
          },
          {
            "label": "lastInterestCompound",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:35"
          },
          {
            "label": "updateTimeLimit",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:38"
          },
          {
            "label": "multiplier",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:41"
          },
          {
            "label": "interestPerSecond",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:44"
          },
          {
            "label": "annualInterest",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:47"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:50"
          },
          {
            "label": "liquidityBuffer",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:53"
          },
          {
            "label": "upgradeStatus",
            "offset": 20,
            "slot": "358",
            "type": "t_bool",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:56"
          },
          {
            "label": "supportedTokens",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(AddressSet)2500_storage",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:59"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2500_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2199_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2199_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f0955b23cc3ed9f6bb4446f3aac5753ccfaa4175c5858cf366bd8b1218dab102": {
      "address": "0xC8ac54Dcbc2115e2d491dFC63a3E8169f4a63725",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:38"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:40"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:42"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:44"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:396"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "FakeCurveOld",
            "src": "contracts\\mock\\testnet\\FakeCurveOld.sol:29"
          },
          {
            "label": "usdtFee",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "FakeCurveOld",
            "src": "contracts\\mock\\testnet\\FakeCurveOld.sol:31"
          },
          {
            "label": "usdcFee",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "FakeCurveOld",
            "src": "contracts\\mock\\testnet\\FakeCurveOld.sol:32"
          },
          {
            "label": "DAI",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "FakeCurveOld",
            "src": "contracts\\mock\\testnet\\FakeCurveOld.sol:34"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "FakeCurveOld",
            "src": "contracts\\mock\\testnet\\FakeCurveOld.sol:35"
          },
          {
            "label": "USDT",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "FakeCurveOld",
            "src": "contracts\\mock\\testnet\\FakeCurveOld.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1335": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "c4a2eb3b83b81acd40c60be80be3a1def5ffd6820550b79fc3b4125936f71571": {
      "address": "0x9f5CFA49aa54189DfFB60c46EAF0Eb8e2f2fA592",
      "txHash": "0x7bad84538694151483b00dfb7ae3f599b2b207dc5b520bd93c94927010531939",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:38"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:40"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:42"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:44"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:396"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:29"
          },
          {
            "label": "usdtFee",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:31"
          },
          {
            "label": "usdcFee",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:32"
          },
          {
            "label": "DAI",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:34"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:35"
          },
          {
            "label": "USDT",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1335": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b5f7c5cf17ba56cd1daa93651b99243545dff60eca87e335c4949f375fe0483a": {
      "address": "0xf83FD0622Cc2398c2d73024b6e08D7d75904B8C0",
      "txHash": "0x1aed97d82b18e31206bc88d66384582834f4dedad18b3b7509e4fdce445f6e76",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:27"
          },
          {
            "label": "alluoLp",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:30"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(FakeCurve)4392",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:33"
          },
          {
            "label": "inPoolAmount",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:36"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "305",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:39"
          },
          {
            "label": "slippage",
            "offset": 1,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:42"
          },
          {
            "label": "bufferPercentage",
            "offset": 5,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:45"
          },
          {
            "label": "totalWithdrawalAmount",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:48"
          },
          {
            "label": "withdrawals",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_struct(Withdrawal)4449_storage)",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:61"
          },
          {
            "label": "lastWithdrawalRequest",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:64"
          },
          {
            "label": "lastSatisfiedWithdrawal",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:66"
          },
          {
            "label": "DAI",
            "offset": 0,
            "slot": "310",
            "type": "t_contract(IERC20Upgradeable)1189",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:68"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "311",
            "type": "t_contract(IERC20Upgradeable)1189",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:69"
          },
          {
            "label": "USDT",
            "offset": 0,
            "slot": "312",
            "type": "t_contract(IERC20Upgradeable)1189",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:70"
          },
          {
            "label": "keepersTrigger",
            "offset": 20,
            "slot": "312",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FakeCurve)4392": {
            "label": "contract FakeCurve",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1189": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Withdrawal)4449_storage)": {
            "label": "mapping(uint256 => struct LiquidityBufferVaultForMumbai.Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Withdrawal)4449_storage": {
            "label": "struct LiquidityBufferVaultForMumbai.Withdrawal",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "d65cfe6e6f78c4d86fa12141a6fd23867d8837e4417ea903b88e4402758eabfc": {
      "address": "0x659832f168B6b5BF983E062D0F8b1a28E822B661",
      "txHash": "0x5ceb7ee6dbe28755758883c1a9e61a82b7e2b52c304acbdc78dc347aa818ad69",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:27"
          },
          {
            "label": "alluoLp",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:30"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(FakeCurve)26145",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:33"
          },
          {
            "label": "inPoolAmount",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:36"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "305",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:39"
          },
          {
            "label": "slippage",
            "offset": 1,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:42"
          },
          {
            "label": "bufferPercentage",
            "offset": 5,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:45"
          },
          {
            "label": "totalWithdrawalAmount",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:48"
          },
          {
            "label": "withdrawals",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_struct(Withdrawal)28128_storage)",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:61"
          },
          {
            "label": "lastWithdrawalRequest",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:64"
          },
          {
            "label": "lastSatisfiedWithdrawal",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:66"
          },
          {
            "label": "DAI",
            "offset": 0,
            "slot": "310",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:68"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "311",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:69"
          },
          {
            "label": "USDT",
            "offset": 0,
            "slot": "312",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:70"
          },
          {
            "label": "keepersTrigger",
            "offset": 20,
            "slot": "312",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FakeCurve)26145": {
            "label": "contract FakeCurve",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1335": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Withdrawal)28128_storage)": {
            "label": "mapping(uint256 => struct LiquidityBufferVaultForMumbai.Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Withdrawal)28128_storage": {
            "label": "struct LiquidityBufferVaultForMumbai.Withdrawal",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "90f24581e76c30f5bc81ad63dd43632afc5e79f996d0c1af685a528aed83c995": {
      "address": "0xDDC213a1FB933755bf6a62Ab798a9bF15e78e8dA",
      "txHash": "0xd741cb4a053af9c4443bf60276ff4f798878b9be8aa3e657aca2599b0bd12c2c",
      "layout": {
        "storage": [
          {
            "label": "_balances",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:583"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:585"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ERC20",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:587"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage",
            "contract": "ERC20",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:589"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "ERC20",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:590"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "5",
            "type": "t_uint8",
            "contract": "ERC20",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:591"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30811_storage)",
            "contract": "AccessControl",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:1267"
          },
          {
            "label": "_revertMsg",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage",
            "contract": "AccessControlMixin",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:1463"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "8",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "8",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "9",
            "type": "t_bytes32",
            "contract": "EIP712Domain",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:1656"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Nonces",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:1670"
          },
          {
            "label": "_authorizationStates",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_enum(AuthorizationState)31610))",
            "contract": "GasAbstraction",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:1915"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Blacklistable",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:2547"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "13",
            "type": "t_bool",
            "contract": "Pausable",
            "src": "contracts\\mock\\testnet\\MetaTxERC20Token.sol:2616"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "14",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "64",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(AuthorizationState)31610": {
            "label": "enum GasAbstraction.AuthorizationState",
            "members": [
              "Unused",
              "Used",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_enum(AuthorizationState)31610))": {
            "label": "mapping(address => mapping(bytes32 => enum GasAbstraction.AuthorizationState))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_enum(AuthorizationState)31610)": {
            "label": "mapping(bytes32 => enum GasAbstraction.AuthorizationState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30811_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)30567_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)30381_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)30811_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)30567_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)30381_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ad814e0f4d26895e9640f2f29a3928a048cf47cf8c63fdef806821325a082f7a": {
      "address": "0x5a74Ac41b4BA5125767db7a758FF9dd4F94E7eB5",
      "txHash": "0xcd22fdda69da887d195ab475b4bf9983e27f495b701851306655fdc6aca7b77b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:27"
          },
          {
            "label": "alluoLp",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:30"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(FakeCurve)4392",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:33"
          },
          {
            "label": "inPoolAmount",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:36"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "305",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:39"
          },
          {
            "label": "slippage",
            "offset": 1,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:42"
          },
          {
            "label": "bufferPercentage",
            "offset": 5,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:45"
          },
          {
            "label": "totalWithdrawalAmount",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:48"
          },
          {
            "label": "withdrawals",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_struct(Withdrawal)4449_storage)",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:61"
          },
          {
            "label": "lastWithdrawalRequest",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:64"
          },
          {
            "label": "lastSatisfiedWithdrawal",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:66"
          },
          {
            "label": "DAI",
            "offset": 0,
            "slot": "310",
            "type": "t_contract(IERC20Upgradeable)1189",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:68"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "311",
            "type": "t_contract(IERC20Upgradeable)1189",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:69"
          },
          {
            "label": "USDT",
            "offset": 0,
            "slot": "312",
            "type": "t_contract(IERC20Upgradeable)1189",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:70"
          },
          {
            "label": "keepersTrigger",
            "offset": 20,
            "slot": "312",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FakeCurve)4392": {
            "label": "contract FakeCurve",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1189": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Withdrawal)4449_storage)": {
            "label": "mapping(uint256 => struct LiquidityBufferVaultForMumbai.Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Withdrawal)4449_storage": {
            "label": "struct LiquidityBufferVaultForMumbai.Withdrawal",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "fce8e6f300452ec5ae2ac9ff8b68ecd56e94ee3c039d56f7af95b91f05c0438c": {
      "address": "0xc622244881FF63d0b1C1Eb3cEad17F06fE066600",
      "txHash": "0x9e6c27610957c4d42fc0feb336f82aa9752d2943be0f9da1088b10ad9e366114",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:27"
          },
          {
            "label": "alluoLp",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:30"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(FakeCurve)4392",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:33"
          },
          {
            "label": "inPoolAmount",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:36"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "305",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:39"
          },
          {
            "label": "slippage",
            "offset": 1,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:42"
          },
          {
            "label": "bufferPercentage",
            "offset": 5,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:45"
          },
          {
            "label": "totalWithdrawalAmount",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:48"
          },
          {
            "label": "withdrawals",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_struct(Withdrawal)4449_storage)",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:61"
          },
          {
            "label": "lastWithdrawalRequest",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:64"
          },
          {
            "label": "lastSatisfiedWithdrawal",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:66"
          },
          {
            "label": "DAI",
            "offset": 0,
            "slot": "310",
            "type": "t_contract(IERC20Upgradeable)1189",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:68"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "311",
            "type": "t_contract(IERC20Upgradeable)1189",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:69"
          },
          {
            "label": "USDT",
            "offset": 0,
            "slot": "312",
            "type": "t_contract(IERC20Upgradeable)1189",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:70"
          },
          {
            "label": "keepersTrigger",
            "offset": 20,
            "slot": "312",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FakeCurve)4392": {
            "label": "contract FakeCurve",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1189": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Withdrawal)4449_storage)": {
            "label": "mapping(uint256 => struct LiquidityBufferVaultForMumbai.Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Withdrawal)4449_storage": {
            "label": "struct LiquidityBufferVaultForMumbai.Withdrawal",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "46455dc2f459fe3ab8ca805c84fb24a5f5471d755e0fe5af72a7d4d74e5ab71a": {
      "address": "0xc22DB2874725B84e99EC0a644fdD042EA3F6F899",
      "txHash": "0x28cac15178b3c6c8122ee7bffca5b1a078bdeae2f21cbbfd5f71fca54c8b1e57",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:38"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:40"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:42"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:44"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:396"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:29"
          },
          {
            "label": "usdtFee",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:31"
          },
          {
            "label": "usdcFee",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:32"
          },
          {
            "label": "DAI",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:34"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:35"
          },
          {
            "label": "USDT",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "FakeCurve",
            "src": "contracts\\mock\\testnet\\FakeCurve.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1335": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b3e370b9e73cf7967b1bbd707a5b904cfa0a830fec0f6f4fa80be01f63e00fbe": {
      "address": "0x321A84266D42fAefC27F0AAA4800951FFf8c279a",
      "txHash": "0x1a1eb77539b10ade1fff80b7824491b79a99e1eda830fe08758687f3689075ae",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:27"
          },
          {
            "label": "alluoLp",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:30"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(FakeCurve)26145",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:33"
          },
          {
            "label": "inPoolAmount",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:36"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "305",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:39"
          },
          {
            "label": "slippage",
            "offset": 1,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:42"
          },
          {
            "label": "bufferPercentage",
            "offset": 5,
            "slot": "305",
            "type": "t_uint32",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:45"
          },
          {
            "label": "totalWithdrawalAmount",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:48"
          },
          {
            "label": "withdrawals",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_struct(Withdrawal)28128_storage)",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:61"
          },
          {
            "label": "lastWithdrawalRequest",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:64"
          },
          {
            "label": "lastSatisfiedWithdrawal",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:66"
          },
          {
            "label": "DAI",
            "offset": 0,
            "slot": "310",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:68"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "311",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:69"
          },
          {
            "label": "USDT",
            "offset": 0,
            "slot": "312",
            "type": "t_contract(IERC20Upgradeable)1335",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:70"
          },
          {
            "label": "keepersTrigger",
            "offset": 20,
            "slot": "312",
            "type": "t_bool",
            "contract": "LiquidityBufferVaultForMumbai",
            "src": "contracts\\mock\\testnet\\LiquidityBufferVaultForMumbai.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FakeCurve)26145": {
            "label": "contract FakeCurve",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1335": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Withdrawal)28128_storage)": {
            "label": "mapping(uint256 => struct LiquidityBufferVaultForMumbai.Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Withdrawal)28128_storage": {
            "label": "struct LiquidityBufferVaultForMumbai.Withdrawal",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "aaa1751e0673e3ab12430e39a0720f82ca6b5d99d61cd53e6d28791519f656d8": {
      "address": "0x0E6FF3807afEBc57bE15dCF810744592607f1037",
      "txHash": "0x8bf2eae451a80ae25bace0614bca4f729b5f2b6cfe08e641fa16087d506f3428",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:38"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:40"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:42"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:44"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "AlluoERC20Upgradable",
            "src": "contracts\\Farming\\AlluoERC20Upgradable.sol:396"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "growingRatio",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:32"
          },
          {
            "label": "lastInterestCompound",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:35"
          },
          {
            "label": "updateTimeLimit",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:38"
          },
          {
            "label": "multiplier",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:41"
          },
          {
            "label": "interestPerSecond",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:44"
          },
          {
            "label": "annualInterest",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:47"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:50"
          },
          {
            "label": "liquidityBuffer",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:53"
          },
          {
            "label": "upgradeStatus",
            "offset": 20,
            "slot": "358",
            "type": "t_bool",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:56"
          },
          {
            "label": "supportedTokens",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(AddressSet)2579_storage",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:59"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "IbAlluoForMumbai_V3",
            "src": "contracts\\mock\\testnet\\IbAlluoForMumbai_V2.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2579_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2278_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2278_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
